// Code generated by ent, DO NOT EDIT.

package ent

import (
	"blog/ent/post"
	"blog/ent/schema"
	"blog/ent/token"
	"blog/ent/user"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	postFields := schema.Post{}.Fields()
	_ = postFields
	// postDescDate is the schema descriptor for date field.
	postDescDate := postFields[2].Descriptor()
	// post.DefaultDate holds the default value on creation for the date field.
	post.DefaultDate = postDescDate.Default.(time.Time)
	// postDescID is the schema descriptor for id field.
	postDescID := postFields[0].Descriptor()
	// post.DefaultID holds the default value on creation for the id field.
	post.DefaultID = postDescID.Default.(func() uuid.UUID)
	tokenFields := schema.Token{}.Fields()
	_ = tokenFields
	// tokenDescCreatedAt is the schema descriptor for createdAt field.
	tokenDescCreatedAt := tokenFields[2].Descriptor()
	// token.DefaultCreatedAt holds the default value on creation for the createdAt field.
	token.DefaultCreatedAt = tokenDescCreatedAt.Default.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescAvatar is the schema descriptor for avatar field.
	userDescAvatar := userFields[7].Descriptor()
	// user.DefaultAvatar holds the default value on creation for the avatar field.
	user.DefaultAvatar = userDescAvatar.Default.(string)
}
